{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/Section/Section.js","App.js","index.js"],"names":["ContactForm","onAdd","useState","name","setName","number","setNumber","onSubmit","e","preventDefault","id","uuid","type","placeholder","value","onChange","target","ContactsList","contacts","onRemove","map","contact","onClick","Filter","filterName","Section","title","children","App","setContacts","setFilter","contactsList","filter","toLowerCase","includes","newContact","length","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPA2DeA,EAtDK,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACTC,mBAAS,IADA,mBAC1BC,EAD0B,KACpBC,EADoB,OAELF,mBAAS,IAFJ,mBAE1BG,EAF0B,KAElBC,EAFkB,KAqBjC,OACE,uBAAMC,SAlBiB,SAACC,GACxBA,EAAEC,iBACF,IAAMC,EAAKC,cAENR,GAASE,GAEZJ,EAAM,CACJS,KACAP,OACAE,aAGFD,EAAQ,IACRE,EAAU,MAKZ,UACE,yCAEE,uBACEM,KAAK,OACLT,KAAK,OACLU,YAAY,aACZC,MAAOX,EACPY,SAAU,SAACP,GAAD,OAAOJ,EAAQI,EAAEQ,OAAOF,aAItC,2CAEE,uBACEF,KAAK,MACLT,KAAK,SACLU,YAAY,qBACZC,MAAOT,EACPU,SAAU,SAACP,GAAD,OAAOF,EAAUE,EAAEQ,OAAOF,aAIxC,wBAAQF,KAAK,SAAb,6BCxBSK,EAxBM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAChC,OACE,6BACGD,EAASE,KAAI,SAACC,GAAD,OACZ,+BACGA,EAAQlB,KADX,KACmBkB,EAAQhB,OACzB,wBAAQiB,QAAS,kBAAMH,EAASE,EAAQX,KAAxC,sBAFOW,EAAQX,UCiBVa,EArBA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAYT,EAAe,EAAfA,SAC5B,OACE,+BACE,0DAEE,uBACEH,KAAK,OACLT,KAAK,OACLW,MAAOU,EACPX,YAAY,wBACZE,SAAU,SAACP,GAAD,OAAOO,EAASP,EAAEQ,OAAOF,gBCH9BW,EATC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACvB,OACE,qCACA,6BAAKD,IACJC,MCoDUC,MAjDf,WAAgB,IAAD,EACmB1B,mBAAS,CACvC,CAAEQ,GAAI,OAAQP,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEK,GAAI,OAAQP,KAAM,iBAAkBE,OAAQ,aAC9C,CAAEK,GAAI,OAAQP,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEK,GAAI,OAAQP,KAAM,iBAAkBE,OAAQ,eALnC,mBACNa,EADM,KACIW,EADJ,OAQmB3B,mBAAS,IAR5B,mBAQNsB,EARM,KAQMM,EARN,KAuBPC,EACJb,EAASc,QAAO,YACd,OAD0B,EAAV7B,KACJ8B,cAAcC,SAASV,EAAWS,kBAGlD,OACE,gCACE,cAAC,EAAD,CAASP,MAAM,YAAf,SACA,cAAC,EAAD,CACEzB,MAtBmB,SAACkC,GACxB,OAAKjB,EAASc,QAAO,SAAAxB,GAAC,OAAIA,EAAEL,OAASgC,EAAWhC,QAAMiC,OAAS,GAC7DP,EAAY,GAAD,mBAAKX,GAAL,CAAeiB,MACnB,IAETE,MAAM,GAAD,OAAIF,EAAWhC,KAAf,6BACE,QAoBL,eAAC,EAAD,CAASuB,MAAM,WAAf,UACA,cAAC,EAAD,CACEF,WAAYA,EACZT,SAAUe,IACZ,cAAC,EAAD,CACEZ,SAAUa,EACVZ,SAvBsB,SAAAT,GAC1BmB,EAAYX,EAASc,QAAO,SAACX,GAAD,OAAaA,EAAQX,KAAOA,gBCvB5D4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.07a3ae8d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport \"./contactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactForm = ({ onAdd }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const id = uuid();\r\n\r\n    if (!name || !number) return;\r\n    if (\r\n      onAdd({\r\n        id,\r\n        name,\r\n        number,\r\n      })\r\n    ) {\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"Enter phone number\"\r\n          value={number}\r\n          onChange={(e) => setNumber(e.target.value)}\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\">Add Contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onAdd: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst ContactsList = ({ contacts, onRemove }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <li key={contact.id}>\r\n          {contact.name}: {contact.number}\r\n          <button onClick={() => onRemove(contact.id)}>Delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  onRemove: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactsList;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ filterName, onChange }) => {\r\n  return (\r\n    <form>\r\n      <label>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={filterName}\r\n          placeholder=\"Enter name for Search\"\r\n          onChange={(e) => onChange(e.target.value)}\r\n        />\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","const Section = ({title, children}) => {\r\n  return (\r\n    <>\r\n    <h2>{title}</h2>\r\n    {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Section;","import { useState } from 'react';\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport Filter from \"./components/Filter/Filter\";\nimport Section from './components/Section/Section'\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n\n  const [filterName, setFilter] = useState('');\n\n  const handleAddContact = (newContact) => {\n    if (!contacts.filter(e => e.name === newContact.name).length > 0) {\n      setContacts([...contacts, newContact]);\n      return true;\n    }\n    alert(`${newContact.name} is already in contacts`);\n    return false;\n  };\n\n  const handleRemoveContact = id => {\n    setContacts(contacts.filter((contact) => contact.id !== id));\n  };\n\n  const contactsList = \n    contacts.filter(({name}) => {\n      return name.toLowerCase().includes(filterName.toLowerCase())\n  })\n  \n  return (\n    <div>\n      <Section title='Phonebook'>\n      <ContactForm\n        onAdd={handleAddContact}\n      />\n      </Section>\n\n      <Section title='Contacts'>\n      <Filter\n        filterName={filterName}\n        onChange={setFilter} />\n      <ContactsList\n        contacts={contactsList}\n        onRemove={handleRemoveContact}\n      />\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}